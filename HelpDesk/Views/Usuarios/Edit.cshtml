@model HelpDesk.Models.Usuario

@{
    ViewBag.Title = "Editar Administrador";
}

<link href="~/css/site.css" rel="stylesheet" />

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card form-card">
                <div class="card-header form-card-header">
                    <h4 class="mb-0">
                        <i class="fas fa-user-edit me-2"></i>
                        Editar Administrador
                    </h4>
                </div>
                <div class="card-body p-4">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.DataCadastro)

                        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                        <div class="row mb-4">
                            <div class="col-md-12">
                                <h5 class="form-section-title">
                                    <i class="fas fa-user-circle me-2"></i>
                                    Informações do Administrador
                                </h5>
                            </div>

                            <div class="col-md-12 mb-3">
                                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "form-label fw-semibold" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-user"></i></span>
                                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new {
                                    @class = "form-control",
                                                                placeholder = "Digite o nome completo"
                                                                } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger small" })
                        </div>

                        <div class="col-md-12 mb-3">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label fw-semibold" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new {
                                                                @class = "form-control",
                                                                placeholder = "exemplo@email.com",
                                                                type = "email"
                                                                } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger small" })
                        </div>

                        <div class="col-md-12 mb-4">
                            @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "form-label fw-semibold" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-lock"></i></span>
                                @Html.PasswordFor(model => model.Senha, new {
                                                                @class = "form-control",
                                                                placeholder = "Deixe em branco para manter a senha atual",
                                                                value = ""
                                                                })
                            </div>
                            <div class="form-text">Deixe em branco para manter a senha atual</div>
                        </div>
                    </div>

                    <div class="row mt-4">
                        <div class="col-md-12">
                            <div class="d-flex gap-2 justify-content-end">
                                <button type="submit" class="btn btn-success-custom">
                                    <i class="fas fa-save me-1"></i> Salvar Alterações
                                </button>
                                @Html.ActionLink(" Cancelar", "Index", "Usuarios", null, new {
                                                                @class = "btn btn-secondary"
                                                                })
                            </div>
                        </div>
                    </div>
                                        }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Script para não exigir a senha se estiver em branco
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');
            form.addEventListener('submit', function(e) {
                const senhaInput = document.getElementById('Senha');
                if (senhaInput.value === '') {
                    senhaInput.disabled = true;
                }
            });
        });
    </script>
}