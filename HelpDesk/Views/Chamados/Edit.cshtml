@model HelpDesk.Models.Chamado

@{
    ViewBag.Title = "Editar Chamado";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="card shadow-sm">
                <div class="card-header">
                    <h4 class="mb-0"><i class="fas fa-edit me-2"></i>Editar Chamado #@Model.Id</h4>
                </div>
                <div class="card-body p-4">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="row mb-4">
                            <div class="col-md-12">
                                <h5 class="section-title"><i class="fas fa-info-circle me-2"></i>Informações Básicas</h5>
                            </div>

                            <div class="col-md-12 mb-3">
                                @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-heading"></i></span>
                                    @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control", placeholder = "Digite o título do chamado" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger small" })
                            </div>

                            <div class="col-md-12 mb-3">
                                @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-align-left"></i></span>
                                    @Html.TextAreaFor(model => model.Descricao, new { @class = "form-control", rows = 5, placeholder = "Descreva detalhadamente o problema..." })
                                </div>
                                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger small" })
                            </div>
                        </div>

                        <div class="row mb-4">
                            <div class="col-md-12">
                                <h5 class="section-title"><i class="fas fa-cogs me-2"></i>Configurações do Chamado</h5>
                            </div>

                            <div class="col-md-6 mb-3">
                                @Html.LabelFor(model => model.Prioridade, htmlAttributes: new { @class = "form-label" })
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-exclamation-triangle"></i></span>
                                    @Html.DropDownListFor(model => model.Prioridade,
                                    new SelectList(ViewBag.PrioridadeList),
                                                                "Selecione a prioridade",
                                                                new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.Prioridade, "", new { @class = "text-danger small" })
                        </div>

                        <div class="col-md-6 mb-3">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-tasks"></i></span>
                                @Html.DropDownListFor(model => model.Status,
                                                                new SelectList(ViewBag.StatusList),
                                                                "Selecione o status",
                                                                new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger small" })
                        </div>

                        <div class="col-md-6 mb-3">
                            @Html.LabelFor(model => model.Responsavel, htmlAttributes: new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-user"></i></span>
                                @Html.EditorFor(model => model.Responsavel, new { htmlAttributes = new { @class = "form-control", placeholder = "Nome do responsável" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Responsavel, "", new { @class = "text-danger small" })
                        </div>

                        <div class="col-md-6 mb-3">
                            <label class="form-label">Data de Abertura</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-calendar-plus"></i></span>
                                <input type="text" class="form-control" value="@Model.DataAbertura.ToString("dd/MM/yyyy HH:mm")" disabled>
                            </div>
                        </div>

                        @if (Model.DataFechamento.HasValue)
                            {
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Data de Fechamento</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-calendar-check"></i></span>
                                        <input type="text" class="form-control" value="@Model.DataFechamento.Value.ToString("dd/MM/yyyy HH:mm")" disabled>
                                    </div>
                                </div>
                            }
                        </div>

                        <div class="row mt-4">
                            <div class="col-md-12">
                                <div class="d-flex justify-content-between">
                                    @Html.ActionLink(" Voltar", "Index", "Chamados", null, new { @class = "btn btn-secondary" })
                                    <div>
                                        <button type="reset" class="btn btn-outline-secondary me-2"><i class="fas fa-redo me-1"></i> Limpar</button>
                                        <button type="submit" class="btn btn-primary"><i class="fas fa-save me-1"></i> Salvar Alterações</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

